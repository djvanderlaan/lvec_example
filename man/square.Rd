% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/square.R
\name{square}
\alias{square}
\alias{square_r}
\title{Demonstration functions for calculating the square of an lvec}
\usage{
square(x)

square_r(x)
}
\arguments{
\item{x}{an lvec.}
}
\description{
Demonstration functions for calculating the square of an lvec
}
\details{
This file demonstrates how a new lvec can be calculated from an other lvec.
In this case each of the elements in the input are squared. The resulting
lvec has the same type as the input lvec. 

First define a subclass of lvec_visitor. This subclass should implement a
visit method for each of the possible types of lvec (double, int, std::string
and cppr::logical). This allows one to write separate methods for each lvec
type. In this case the implementations for double and int are the same,
except for the type of the elements of the lvec. Therefore, a template
(visit_template) is used. This template is called from the visit methods. For
the lvec<std::string> it is not possible to define the square. This method
will therefore generate an error. For the lvec<cppr:logical> the square of
the input is the same as the input. Therefore, a clone of the input is
returned. 

There is also an implementation of the same function in pure R
(\code{square_r}). Many operations on lvecs can also be implemented by 
processing an lvec in chunks. This will often give a performance comparable 
to working directly in c++ (in this case the performance is better in C++).
}

